{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/EachPlot.js","webpack:///./components/Loader.js","webpack:///../src/index.js","webpack:///./index.js","webpack:///./components/Upload.js","webpack:///./api/upload.js","webpack:///../src/util.js","webpack:///../src/create-element.js","webpack:///../src/component.js","webpack:///../src/diff/children.js","webpack:///../src/diff/props.js","webpack:///../src/diff/index.js","webpack:///../src/render.js","webpack:///../src/clone-element.js","webpack:///../src/create-context.js","webpack:///../src/constants.js","webpack:///../src/options.js","webpack:///../src/diff/catch-error.js","webpack:///./components/Plot.js","webpack:///../node_modules/preact-cli/lib/lib/entry.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EachPlot","exerciseStat","curKey","setKey","useState","yKeys","useEffect","data","x","map","date","y","val","keysNeedingConversion","has","weightUnit","toFixed","type","marker","color","text","keysForDuration","eachRepDuration","eachRep","Plotly","newPlot","title","xaxis","yaxis","yLabels","height","width","responsive","onChange","event","target","k","btnLabels","id","Set","totalReps","totalWeight","minWeight","maxWeight","totalSeconds","Loader","className","getHookState","index","options","currentComponent","currentHook","hooks","length","push","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","nextValue","action","setState","useReducer","callback","args","state","argsChanged","flushAfterPaintEffects","afterPaintEffects","forEach","component","invokeCleanup","invokeEffect","e","hook","comp","oldArgs","newArgs","some","arg","f","prevRaf","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","filter","cb","App","Upload","isLoading","setLoading","failureMsg","setFailureMsg","responseData","setResponseData","fileInputRef","createRef","cached","getCache","resetData","removeCache","onClick","onSubmit","async","preventDefault","file","current","files","uploadFile","err","console","log","message","enctype","accept","ref","style","marginLeft","window","localStorage","removeItem","getItem","JSON","parse","formData","FormData","append","res","fetch","method","body","status","json","obj","keys","constructor","Error","setItem","stringify","assign","props","removeNode","node","parentNode","removeChild","createElement","children","normalizedProps","arguments","defaultProps","createVNode","original","undefined","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","rerenderQueue","process","prevDebounce","debounceRendering","defer","queue","sort","a","b","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","EMPTY_ARR","oldChildrenLength","Array","isArray","EMPTY_OBJ","reorderChildren","placeChild","applyRef","tmp","toChildArray","out","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","setStyle","setProperty","IS_NON_DIMENSIONAL","test","dom","oldValue","useCapture","cssText","replace","toLowerCase","slice","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","setAttribute","removeAttribute","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","contextType","render","doRender","sub","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","root","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","firstChild","checked","parentVNode","skipRemove","componentWillUnmount","this","replaceNode","cloneElement","createContext","defaultValue","contextId","Consumer","contextValue","Provider","subs","ctx","_props","old","splice","isValidElement","error","ctor","handled","getDerivedStateFromError","componentDidCatch","update","forceUpdate","Promise","then","resolve","Plot","exerciseNames","selectedName","setSelectedName","h","Preact","interopDefault","default","navigator","serviceWorker","register","__webpack_public_path__","require","getElementById","firstElementChild","app","preRenderData","inlineDataElement","querySelector","decodeURI","url","CLI_DATA"],"mappings":"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","file":"bundle.051f3.esm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"mdyV\");\n","import { useEffect, useState } from \"preact/hooks\";\n\nconst keysNeedingConversion = new Set([\n  \"totalWeight\",\n  \"minWeight\",\n  \"maxWeight\",\n]);\n\nconst keysForDuration = new Set([\"totalSeconds\"]);\n\nconst yLabels = {\n  totalReps: \"Total Reps\",\n  totalWeight: \"Total Weight - kg\",\n  minWeight: \"Min Weight - kg\",\n  maxWeight: \"Max Weight - kg\",\n  totalSeconds: \"Total Duration - s\",\n};\nconst btnLabels = {\n  totalReps: \"Total Reps\",\n  totalWeight: \"Total Weight\",\n  minWeight: \"Min Weight\",\n  maxWeight: \"Max Weight\",\n  totalSeconds: \"Total Duration\",\n};\nconst LBS_PER_KG = 2.20462;\n\nconst WIDTH = 900;\nconst HEIGHT = 700;\n\nconst yKeys = [\n  \"totalReps\",\n  \"totalWeight\",\n  \"minWeight\",\n  \"maxWeight\",\n  \"totalSeconds\",\n];\n\nexport function EachPlot({ name, exerciseStat }) {\n  const [curKey, setKey] = useState(yKeys[0]);\n\n  useEffect(() => {\n    const data = [\n      {\n        x: exerciseStat.map((d) => d.date),\n        y: exerciseStat.map((d) => {\n          const val = d[curKey];\n          if (keysNeedingConversion.has(curKey) && d.weightUnit === \"lbs\") {\n            return (val / LBS_PER_KG).toFixed(2);\n          }\n          return val.toFixed(2);\n        }),\n        type: \"bar\",\n        marker: { color: \"crimson\" },\n        text: exerciseStat.map((d) =>\n          keysForDuration.has(curKey) ? d.eachRepDuration : d.eachRep\n        ),\n      },\n    ];\n    const layout = {\n      title: name,\n      xaxis: { title: \"Date\" },\n      yaxis: { title: yLabels[curKey] },\n      height: HEIGHT,\n      width: WIDTH,\n    };\n    const config = { responsive: true };\n    // eslint-disable-next-line no-undef\n    Plotly.newPlot(name, data, layout, config);\n  }, [name, exerciseStat, curKey]);\n\n  const handleSelectChange = (event) => {\n    setKey(event.target.value);\n  };\n\n  return (\n    <div>\n      <select value={curKey} onChange={handleSelectChange}>\n        {yKeys.map((k) => (\n          <option value={k} key={k}>\n            {btnLabels[k]}\n          </option>\n        ))}\n      </select>\n      <div id={name} />\n    </div>\n  );\n}\n","export function Loader() {\n  return <p className=\"loader\">Loading...</p>;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n/**\n * Keep track of the previous component so that we can set\n * `currentComponent` to `null` and throw when a hook is invoked\n * outside of render\n * @type {import('./internal').Component}\n */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = previousComponent;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.forEach(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { Upload } from \"./components/Upload\";\nimport \"./style\";\n\nexport default function App() {\n  return (\n    <div className=\"content\">\n      <h1 className=\"title\" id=\"title\">\n        Strong Dashboard\n      </h1>\n      <Upload />\n    </div>\n  );\n}\n","import { uploadFile, removeCache, getCache } from \"../api/upload\";\nimport { useState, useEffect } from \"preact/hooks\";\nimport { createRef } from \"preact\";\nimport { Plot } from \"./Plot\";\nimport { Loader } from \"./Loader\";\nexport function Upload() {\n  const [isLoading, setLoading] = useState(true);\n  const [failureMsg, setFailureMsg] = useState(null);\n  const [responseData, setResponseData] = useState(null);\n\n  const fileInputRef = createRef();\n\n  useEffect(() => {\n    const cached = getCache();\n    if (cached) {\n      setResponseData(cached);\n    }\n    setLoading(false);\n  }, []);\n\n  const resetData = () => {\n    removeCache();\n    setFailureMsg(null);\n    setResponseData(null);\n  };\n\n  const submit = async (event) => {\n    event.preventDefault();\n    const file = fileInputRef.current?.files?.[0];\n    if (!file) {\n      return;\n    }\n    try {\n      setLoading(true);\n      const data = await uploadFile(file);\n      setResponseData(data);\n    } catch (err) {\n      console.log(err);\n      setFailureMsg(err?.message || \"Something went wrong\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (failureMsg) {\n    return (\n      <>\n        <button className=\"control-btn\" onClick={resetData}>\n          Upload a new file\n        </button>\n        <div className=\"border-bottom\" />\n        <p>{failureMsg}</p>\n      </>\n    );\n  }\n\n  if (responseData) {\n    return (\n      <div>\n        <button className=\"control-btn\" onClick={resetData}>\n          Upload a new file\n        </button>\n        <div className=\"border-bottom\" />\n        <Plot data={responseData} />\n      </div>\n    );\n  }\n\n  return (\n    <form\n      className=\"upload-form border-bottom\"\n      onSubmit={submit}\n      enctype=\"multipart/form-data\"\n    >\n      <label>\n        <p>\n          Welcome to Strong Dashboard. Upload your csv file exported from the\n          Strong app to visualize your data and get a sense of your progress.\n        </p>\n        <input\n          className=\"control-btn\"\n          type=\"file\"\n          accept=\".csv\"\n          name=\"myFile\"\n          ref={fileInputRef}\n        />\n        <input\n          className=\"control-btn\"\n          style={{ marginLeft: 8 }}\n          type=\"submit\"\n          value=\"Upload File\"\n        />\n      </label>\n    </form>\n  );\n}\n","const LS_KEY = \"StrongData\";\n// eslint-disable-next-line no-undef\nconst BASE_API = __BASE_API__;\n\nexport function removeCache() {\n  window.localStorage.removeItem(LS_KEY);\n}\n\nexport function getCache() {\n  const cached = window.localStorage.getItem(LS_KEY);\n  if (cached) {\n    return JSON.parse(cached);\n  }\n  return null;\n}\n\nfunction isFalsyObject(obj) {\n  return obj && Object.keys(obj).length === 0 && obj.constructor === Object;\n}\nexport function cacheData(data) {\n  window.localStorage.setItem(LS_KEY, JSON.stringify(data));\n}\n\nexport async function uploadFile(file) {\n  const formData = new FormData();\n  formData.append(\"myFile\", file, file?.name || \"strong.csv\");\n  const res = await fetch(`${BASE_API}api/v1/upload`, {\n    method: \"POST\",\n    body: formData,\n  });\n  if (res.status === 200) {\n    const json = await res.json();\n    if (isFalsyObject(json)) {\n      throw new Error(\"No data returned. Please check your file.\");\n    }\n    cacheData(json);\n\n    return json;\n  }\n  throw new Error(\"Failed to get data\");\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++options._vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children != null && // Can be null if childVNode suspended\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type === 'option') {\n\t\t\t\t// @ts-ignore We have validated that the type of parentDOM is 'option'\n\t\t\t\t// in the above check\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < childVNode._children.length; tmp++) {\n\t\tlet vnode = childVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tchildVNode._children,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren =\n\t\t\texcessDomChildren && EMPTY_ARR.slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tdom.firstChild,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type != 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? EMPTY_ARR.slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError,\n\t_vnodeId: 0\n};\n\nexport default options;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { useState } from \"preact/hooks\";\nimport { EachPlot } from \"./EachPlot\";\nexport function Plot({ data }) {\n  const exerciseNames = Object.keys(data);\n  const [selectedName, setSelectedName] = useState(exerciseNames[0]);\n\n  return (\n    <div className=\"plot-container\">\n      <div className=\"bookmarks\">\n        {exerciseNames.map((name) => (\n          <a\n            className={selectedName === name ? \"selected\" : \"\"}\n            onClick={() => setSelectedName(name)}\n            key={name}\n          >\n            {name}\n          </a>\n        ))}\n      </div>\n      <div className=\"plots\">\n        <EachPlot\n          key={selectedName}\n          name={selectedName}\n          exerciseStat={data[selectedName]}\n        />\n      </div>\n    </div>\n  );\n}\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\t// eslint-disable-next-line no-undef\n\t\tnavigator.serviceWorker.register(__webpack_public_path__ + 'sw-debug.js');\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\t// eslint-disable-next-line no-undef\n\t\tnavigator.serviceWorker.register(\n\t\t\t__webpack_public_path__ + (process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t// eslint-disable-next-line no-undef\n\tnavigator.serviceWorker.register(\n\t\t__webpack_public_path__ + (process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\troot = doRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n"],"sourceRoot":""}